<launch>
  <arg name="launch_transformable_server" default="true" />
  <arg name="launch_tabletop_detector" default="false" />
  <arg name="launch_grasp_mask_rcnn" default="false" />

  <arg name="input_cloud" default="/head_camera/depth_registered/points" />
  <arg name="input_image" default="/head_camera/depth_registered/image_raw" />
  <arg name="camera_frame_id" default="head_camera_rgb_optical_frame" />
  <arg name="manager" default="head_camera_manager" />

  <!-- interactive marker -->
  <node name="transformable_interactive_server"
        pkg="jsk_interactive_marker" type="transformable_server_sample"
        if="$(arg launch_transformable_server)" >
    <rosparam subst_value="true">
      display_interactive_manipulator: true
      display_interactive_manipulator_only_selected: true
    </rosparam>
  </node>

  <!-- tf for realsense at baxter's torso -->
  <!-- <node name="marker_6dof_tf_base_to_color" -->
  <!--       pkg="jsk_interactive_marker" type="marker_6dof"> -->
  <!--   <rosparam command="load" file="$(find eus_vive)/config/baxter/$(arg camera_type)_torso_pose.yaml" /> -->
  <!--   <rosparam subst_value="true" > -->
  <!--     object_type: cube -->
  <!--     publish_tf: true -->
  <!--     tf_frame: $(arg camera_frame_id) -->
  <!--     object_x: 0.1 -->
  <!--     object_y: 0.1 -->
  <!--     object_z: 0.1 -->
  <!--   </rosparam> -->
  <!-- </node> -->

  <!-- <include file="$(find eus_vive)/launch/include/realsense_$(arg camera_type).launch"> -->
  <!--   <arg name="camera_ns" value="$(arg camera_ns)" /> -->
  <!--   <arg name="manager" value="$(arg manager)" /> -->
  <!--   <arg name="publish_tf" value="false" /> -->
  <!-- </include> -->

  <node name="realsense_resize_points_publisher"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ResizePointsPublisher head_camera_manager">
    <remap from="~input" to="/head_camera/depth_registered/points" />
    <remap from="~output" to="$(arg input_cloud)" />
    <rosparam>
      step_x: 2
      step_y: 2
    </rosparam>
  </node>

  <node name="pointcloud_to_image" pkg="pcl_ros" type="convert_pointcloud_to_image"
        args="input:=$(arg input_cloud) output:=$(arg input_image)" />

  <include file="$(find hiro_demo)/launch/hiro_tabletop_object_detector.launch"
           if="$(arg launch_tabletop_detector)">
    <arg name="launch_transformable_server" value="$(arg launch_transformable_server)" />
    <arg name="clip" value="true" />
  </include>

  <include file="$(find eus_vive)/launch/baxter/baxter_grasp_mask_rcnn.launch"
           if="$(arg launch_grasp_mask_rcnn)">
    <arg name="input_image" value="$(arg input_image)" />
    <arg name="input_cloud" value="$(arg input_cloud)" />
    <arg name="manager" value="head_camera_manager" />
  </include>

</launch>
