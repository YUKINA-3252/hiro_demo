<launch>
  <arg name="launch_tabletop_detector" default="true" />
  <arg name="launch_grasp_mask_rcnn" default="false" />
  <arg name="mask_rcnn" default="false" />

  <!-- camera -->

  <include file="$(find hiro_demo)/launch/hiro_camera.launch">
    <arg name="launch_transformable_server" value="true" />
    <arg name="launch_tabletop_detector" value="$(arg launch_tabletop_detector)" />
    <arg name="launch_grasp_mask_rcnn" value="$(arg launch_grasp_mask_rcnn)" />
  </include>

  <!-- <!-\- launch spherical camera -\-> -->
  <!-- <group if="$(arg spherical_camera)"> -->
  <!--   <!-\- launch elp camera -\-> -->
  <!--   <group if="$(arg spherical_stereo)"> -->
  <!--     <!-\- launch elp left camera on c1 -\-> -->
  <!--     <node name="elp_left_transform_publisher" pkg="tf" type="static_transform_publisher" -->
  <!--           args="0.032 0.05 0.1 -1.5 -0.6 0.0 head_camera $(arg spherical_left_camera_ns)_link 100" /> -->
  <!--     <node name="elp_left_optical_frame_transform_publisher" pkg="tf" type="static_transform_publisher" -->
  <!--           args="0 0 0 -1.57 0 -1.57 $(arg spherical_left_camera_ns)_link $(arg spherical_left_camera_ns)_optical_frame 100" /> -->
  <!--     <node name="elp_left_rviz_frame_transform_publisher" pkg="tf" type="static_transform_publisher" -->
  <!--           args="0 0 0 3.14 0 0 $(arg spherical_left_camera_ns)_link $(arg spherical_left_camera_ns)_rviz_frame 100" /> -->
  <!--     <include file="$(find eus_vive)/launch/include/elp_usb.launch"> -->
  <!--       <arg name="camera_name" value="$(arg spherical_left_camera_ns)" /> -->
  <!--       <arg name="machine" value="baxter-c1" /> -->
  <!--       <arg name="load_machinepath" value="true" /> -->
  <!--       <arg name="machinepath" value="$(find eus_vive)/launch/baxter/baxter.machine" /> -->
  <!--     </include> -->
  <!--     <!-\- launch elp right camera on c4 -\-> -->
  <!--     <node name="elp_right_transform_publisher" pkg="tf" type="static_transform_publisher" -->
  <!--           args="-0.032 0.05 0.1 -1.5 -0.6 0.0 head_camera $(arg spherical_right_camera_ns)_link 100" /> -->
  <!--     <node name="elp_right_optical_frame_transform_publisher" pkg="tf" type="static_transform_publisher" -->
  <!--           args="0 0 0 -1.57 0 -1.57 $(arg spherical_right_camera_ns)_link $(arg spherical_right_camera_ns)_optical_frame 100" /> -->
  <!--     <node name="elp_right_rviz_frame_transform_publisher" pkg="tf" type="static_transform_publisher" -->
  <!--           args="0 0 0 3.14 0 0 $(arg spherical_right_camera_ns)_link $(arg spherical_right_camera_ns)_rviz_frame 100" /> -->
  <!--     <include file="$(find eus_vive)/launch/include/elp_usb.launch"> -->
  <!--       <arg name="camera_name" value="$(arg spherical_right_camera_ns)" /> -->
  <!--       <arg name="machine" value="localhost" /> -->
  <!--       <arg name="load_machinepath" value="true" /> -->
  <!--       <arg name="machinepath" value="$(find eus_vive)/launch/baxter/baxter.machine" /> -->
  <!--     </include> -->
  <!--   </group> -->
  <!--   <!-\- launch kodak camera -\-> -->
  <!--   <group unless="$(arg spherical_stereo)"> -->
  <!--     <node name="kodak_transform_publisher" pkg="tf" type="static_transform_publisher" -->
  <!--           args="0.05 0.05 0.1 -1.5 -0.6 0.0 head_camera $(arg spherical_camera_ns)_link 100" /> -->
  <!--     <node name="kodak_optical_frame_transform_publisher" pkg="tf" type="static_transform_publisher" -->
  <!--           args="0 0 0 0 0 1.57 $(arg spherical_camera_ns)_link $(arg spherical_camera_ns)_optical_frame 100" /> -->
  <!--     <node name="kodak_rviz_frame_transform_publisher" pkg="tf" type="static_transform_publisher" -->
  <!--           args="0 0 0 3.14 0 0 $(arg spherical_camera_ns)_link $(arg spherical_camera_ns)_rviz_frame 100" /> -->
  <!--     <include file="$(find eus_vive)/launch/include/kodak_pixpro.launch"> -->
  <!--       <arg name="camera_name" value="$(arg spherical_camera_ns)" /> -->
  <!--     </include> -->
  <!--   </group> -->
  <!-- </group> -->

  <!-- launch mask rcnn -->
  <include file="$(find eus_vive)/launch/include/mask_rcnn.launch" if="$(arg mask_rcnn)" >
    <arg name="INPUT_IMAGE" value="/head_camera/rgb/image_rect_color" />
  </include>

  

  <arg name="input_image" default="/head_camera/rgb/image_raw" />
  <arg name="input_camera_info" default="/head_camera/depth/camera_info" />
  <arg name="input_depth_image" default="/head_camera/depth_registered/image_raw" />

  <node name="paper_finder"
        pkg="jsk_perception" type="paper_finder.py"
        output="screen" >
    <remap from="~input" to="$(arg input_image)" />
    <remap from="~input/depth" to="$(arg input_depth_image)" />
    <remap from="~input/camera_info" to="$(arg input_camera_info)" />
    <rosparam>
      with_depth: true
      approximate_sync: true
      length_tolerance: 0.1
    </rosparam>
  </node>

  <group ns="paper_finder" >
    <node name="republish"
          pkg="image_transport" type="republish"
          args="raw compressed">
      <remap from="in" to="output/viz" />
      <remap from="out" to="output/viz" />
    </node>
  </group>


</launch>
